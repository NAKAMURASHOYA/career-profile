## 経歴詳細（長くなるため、直近・主要の案件のみ記載）

※ オープンに書ける部分のみ記載しています。詳細は会ったときにお話しします。

### 公共向け案件(2024年12月~2025年4月)

#### 自身の役割
* RFPから基本設計書の作成
* 詳細設計書の作成
* モノレポ構成TypeScriptでの機能実装
* テスト計画の作成・実施

#### 使用技術
* TypeScript 5.6.3
* Node.js 22.11.0 + pnpm 9.8.0
* Next.js 14.2.21
* Hono 4.6.9
* Prisma 5.22.0
* Tanstack React Query + Zod
* AntDesign
* データベース: Postgres


### 東証プライム上場メガベンチャーでの社内システム開発(2021年12月~2024年1月)

東証プライム上場企業グループの厳しい監査基準を満たしながら、全社横断コーポレートシステムのスクラム開発に従事しました。上場後も成長を目指す会社において、M&Aや組織図の再編、社員管理等の様々なコーポレート業務が発生する中で、「コーポレート業務をシステムのボトルネックにはしない」というのをスローガンにチーム開発を行いました。

組織図の管理や社内の依頼・申請管理、出社管理などの機能作成だけでなく、老朽化していたフロントエンドのEOL対応に伴うアップデート、それに伴うTypeScriptの導入なども実施しました。Vue2からVue3への移行とTypeScript化により、メンテナンス性を大幅に向上させ、チーム全体の開発生産性向上に貢献しました。

結果として、事業部門もある中での社内MVPチームに選出されたほか、生成AIなどの新技術を使った社内ハッカソンでは優勝するなど、技術的な貢献と新しい価値創出の両面で実績を残すことができました。

#### 自身の役割

- グループ全社で利用する組織図管理機能の要件定義・設計・開発・運用
- グループ全社で利用する社内チケットシステムの継続的開発
- delayed job + Active Jobを用いたバッチ実行基盤の構築
- コロナ禍での出社を管理するための機能の要件定義〜運用までの一気通貫した開発（社内MVP受賞）
- Vue 2系→ Vue3系へのアップデート（EOL対応）、TypeScript導入によるメンテナンス性の向上
- チームの開発スピードを上げるための技術的課題の解決。ミドルウェアアップデート、Dependabot導入、利用されていないライブラリの整理など
- 生成AIを業務に導入するためのPoCプロダクト作成（社内ハッカソンチーム優勝）
- 社内チケットをWebからでなくSlackから操作できるようなSlackアプリケーションの開発
    
#### 使用技術

* バックエンド: Ruby 3系 + Ruby on Rails 7系
* Webフロントエンド: Vue 3系 + TypeScript 5系
* Slackフロントエンド: Slack Bolt
* 生成AI: Python 3系 + OpenAI API
* データベース: MySQL 5.7
* インフラ: AWS ECS + Terraform

### ビジネススクールの学習プラットフォーム開発(2018年10月〜2021年11月)

さらなる成長したいと考えているビジネスパーソン向けの社会人大学院・ビジネススクールのウェブ学習プラットフォームをスクラム開発で行いました。

ユーザーとしては、クレジットカード決済で利用するサブスク会員としての個人ユーザーと、法人で契約して請求書払いで決済を行う法人ユーザーが同居しており、その2つのユーザーがきちんとどちらもサービスを安定して利用できるような仕組みを考え実装しました。決済プラットフォームとしても3つ存在する中で、それらをうまくまとめ上げ、統一されたサービスとして運用するような設計実装を行いました。

立ち上げ時オフショアで開発されたプロダクトから、長期的にメンテできるプロダクトにするためにソースコードの品質の改善不足していたテストカバレッジの充足、Dependabotライブラリの更新管理の運用フロー確立などを行いました。

#### 自身の役割

- プロダクトの中期的なロードマップの策定及び各ステークホルダーとのコミュニケーション
- ビジネスサイドからの要望を明文化、機能要件に落とし込んでプロダクトバックログへの反映
- 自立したスクラムチームを作るための仕組み作りと運用
- 決済プラットフォーム3つをまたぐ、自社サービス共通の課金基盤の要件定義、バックエンド＋フロントエンドの一貫した開発、障害対応含めた運用。
- プロダクトの品質の再生。RSpecの充実、CI/CDの整備、Rubocopの警告解消(1200件 -> 5件)、チーム内での設計・実装レビュー文化の確立、ドキュメント化文化の確立。ライブラリアップデートの運用フローの確立
- 技術的負債、仕様的負債の返済計画の作成
- プロパージュニアエンジニアの育成（社内MVP獲得）

#### 使用技術

 * バックエンド: Ruby 2.6 + Ruby on Rails 5
 * フロントエンド: React 17 + TypeScript 4
 * データベース: MySQL 5.7
 * インフラ: Docker(開発環境), AWS EC2+CodePipeline
 * 決済基盤: Stripe, GMO, Apple決済

### 総合DXスタートアップ(2021年5月〜

生成AIが登場したばかりでノウハウが確立されていない中、SaaS・生成AIを活用したPoC開発が求められる状況でした。お客様に納得いただける動作するデモプロダクトの開発と、開発ノウハウの体系化を担当することになりました。

試行錯誤しながら技術選定を実施し、迅速なデモ作成のためStreamlitを活用しました。さらに本格的なWebアプリケーション向けにFastAPI + Reactの構成を導入し、プロトタイプから本格運用までのスムーズな移行を実現しました。

PoCの成功により、お客様から次フェーズの受注獲得に貢献し、生成AI活用の開発ノウハウを社内に蓄積することができました。
### 自身の役割

- プロダクトオーナーからの要望を明文化
- 機能要件に落とし込んでタスク化、アーキテクチャ設計、プロダクトバックログへの反映
- 0->1フェーズにおける速度と品質のバランスの取れた技術選定、実装
- プロパージュニアエンジニアの育成
    
#### 使用技術

* バックエンド: Ruby 3.2 + Ruby on Rails 7 + Python 3.9(streamlit)
* フロントエンド: React 18 + TypeScript 5
* データベース: MySQL 8.0
* インフラ: Docker(開発環境), heroku, AWS ECS
* その他: OpenAI API あるいは Azure OpenAI のモデルを主に利用

### 買取査定系ITベンチャー企業(2016年12月〜2018年6月)

買取査定系ITベンチャー企業の自社サービスの収益基盤機能の要件定義から機能開発運用まで行いました。人的リソースが不足している中、プロダクトマネージャーなどと密にコミュニケーションを取り、スピード感のある機能実装を進めました。

#### 自身の役割

- 月間100万UUを抱える自社サービスの収益基盤機能の要件定義・機能開発 
- 月間1億PVを抱えるSNSの課金機能、動画・音声投稿機能の要件定義、機能開発
- 社内で営業利益率が最大のプロダクトのPOとの二人三脚による要件定義、機能開発、運用
- プロパージュニアエンジニアの育成
- 社内勉強会によるチームメンバーのスキルセットの底上げ
    
#### 使用技術

* バックエンド: Ruby 2.5 + Ruby on Rails 5
* フロントエンド: React + TypeScript, Vue
* データベース: MySQL 5.6
* インフラ: Docker(開発環境), AWS EC2, Kubernates(一部)
* 決済基盤: GMO Payment Gateway
